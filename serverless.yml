service:
  name: velixid-mobile-app-api

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-offline
provider:
  name: aws
  runtime: nodejs6.10
  environment:
      VELIXID_MAPPING_TABLE: VELIXID-MAPPING
      VELIXID_AUTHS_TABLE: VELIXID-AUTHS
      VELIXID_PARTNERS_TABLE: VELIXID-PARTNER
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.VELIXID_MAPPING_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.VELIXID_AUTHS_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.VELIXID_PARTNERS_TABLE}"

functions:
  generateVelixID:
    handler: fn/generate.invoke
    events:
      - http:
          method: post
          path: generate
          cors: true
  newAuthForVelixID:
    handler: fn/newAuthRequest.invoke
    events:
      - http:
          method: post
          path: /v/{velixid}/auths
          cors: true
  allAuthsForVelixID:
    handler: fn/allAuthRequests.invoke
    events:
      - http:
          method: get
          path: /v/{velixid}/auths
          cors: true
  getAuthDetails:
    handler: fn/getAuth.invoke
    events:
      - http:
          method: get
          path: auth/{authid}
          cors: true
  updateAuthDetails:
    handler: fn/updateAuth.invoke
    events:
      - http:
          method: post
          path: auth/{authid}
          cors: true
resources:
  Resources:
    MappingTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "vid"
            AttributeType: "S"   
          -
            AttributeName: "pubkey"
            AttributeType: "S"   
        KeySchema:
          -
            AttributeName: "vid"
            KeyType: "HASH"
          -
            AttributeName: "pubkey"
            KeyType: "RANGE"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"
        TableName: ${self:provider.environment.VELIXID_MAPPING_TABLE}
    AuthorizationTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "vid"
            AttributeType: "S"   
          -
            AttributeName: "AUTH_REQUEST_ID"
            AttributeType: "S"   
        KeySchema:
          -
            AttributeName: "vid"
            KeyType: "HASH"
          -
            AttributeName: "AUTH_REQUEST_ID"
            KeyType: "RANGE"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"
        TableName: ${self:provider.environment.VELIXID_AUTHS_TABLE}
    PartnersTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "vid"
            AttributeType: "S"
        KeySchema:
          -
            AttributeName: "vid"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"
        TableName: ${self:provider.environment.VELIXID_PARTNERS_TABLE}
